# main config for srs

# listen port for RTMP clients
listen              1935;
# max connections for RTMP clients
max_connections     1000;

# HTTP API server config
http_api {
    # whether http api is enabled
    enabled         on;
    # listen port for http api
    listen          1985;
}

# HTTP server config for HLS/HTTP-FLV/DASH
http_server {
    # whether http server is enabled
    enabled         on;
    # listen port for http server
    listen          8080;
    # document root for http server
    # dir             ./objs/nginx/html;
}

# HTTP Hooks config
# Forward API requests to the backend Koa server
# Note: Replace 3000 with your actual backend port if it's different.
# Use host.docker.internal for Docker Desktop, or host IP otherwise.
http_hooks {
    # whether http hooks are enabled
    enabled         on;
    # The event hooks, @see https://ossrs.io/lts/en-us/docs/v4/doc/http-callback
    # when client connect to SRS.
    on_connect      http://127.0.0.1:5000/api/srs/hooks;
    # when client close connection with SRS.
    on_close        http://127.0.0.1:5000/api/srs/hooks;
    # when client publish stream to SRS.
    on_publish      http://127.0.0.1:5000/api/srs/hooks;
    # when client stop publish stream.
    on_unpublish    http://127.0.0.1:5000/api/srs/hooks;
    # when client play stream from SRS.
    # on_play         http://127.0.0.1:8080/api/v1/hooks;
    # when client stop play stream.
    # on_stop         http://127.0.0.1:8080/api/v1/hooks;
    # when srs record a dvr file.
    # on_dvr          http://127.0.0.1:8080/api/v1/hooks;
    # when srs reap a ts file of hls.
    # on_hls          http://127.0.0.1:8080/api/v1/hooks;
    # when srs notify the hls about the playlist.
    # on_hls_notify   http://127.0.0.1:8080/api/v1/hooks;
}

# Virtual Host config
vhost __defaultVhost__ {
    # HTTP-FLV stream config
    http_flv {
        enabled     on;
    }
    # HLS stream config
    hls {
        enabled     on;
        hls_path    ./objs/nginx/html;
        hls_fragment 10;
        hls_window  60;
    }
    # DVR config (optional, for recording)
    # dvr {
    #    enabled         on;
    #    dvr_path        ./objs/record/[app]/[stream]/[2006]/[01]/[02]/[15].[04].[05].flv;
    #    dvr_plan        session; # session, segment
    #    dvr_duration    30;
    #    dvr_wait_keyframe on;
    #}
}
